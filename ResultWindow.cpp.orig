#include"ResultWindow.hpp"
#include"interface.hpp"
#include"TaskGenerator.hpp"

ResultWindow::~ResultWindow() {
   freeimage(background); 
   }

void SuccessWindow::draw() {
	initwindow(600, 450);
	background = loadBMP("successWindow.bmp");
	putimage(0, 0, background, COPY_PUT);
	delay(1000);
	closegraph();
}

void ErrorWindow::draw() {
	initwindow(600, 450);
	background = loadBMP("errorWindow.bmp");
	Button button(200, 232, 200, 50);
	int mX, mY;
	putimage(0, 0, background, COPY_PUT);
	while (1) {
		if (isMouseReleased != 0) isMouseReleased = 0;
		if (isMouseClicked != mousebuttons()) {
			isMouseReleased = isMouseClicked;
			isMouseClicked = mousebuttons();
		}
		mX = mousex();
		mY = mousey();
		if (button.isClick(mX, mY) == 1) {
			break;
		}
	}
	closegraph();
	TasksGenerator* taskgenerator = new TasksGenerator();
	taskgenerator->draw();
	taskgenerator->generate();
	delete taskgenerator ;
}