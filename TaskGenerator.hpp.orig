#ifndef TASKGENERATOR_H
#define TASKGENERATOR_H

#include "graphics.h"
#include "Task.hpp"
#include <string>
#include <vector>
#include <iostream>
#include <fstream>
#include <time.h>
using namespace std;

extern int isMouseClicked;
extern int isMouseReleased;
extern int maxNumberOfGenerations;

class TasksGenerator {
private:
   int tasksNumb = 0;//количество примеров
   int operationsNumb = 0;//количество операций
   int min = 0;//диапазон чисел, минимум
   int max = 0;//диапазон чисел, максимум
   vector<char>operations;//выбраные операции
   vector<Task *>tasks; //сгенерированые примеры
   bool checkIsNumberIsFits(char op, int numberLeft, int res, int &numberRight);
   //проверка 2-ого числа на принадлежность диапазону
   Task *generateTask(int operationsNumb, int res);
   //генерация примера
	Task* decomposeLeftAndCreateRightOperands(char op, int numberRight, int operationsLeftOperand,int res);
//разложения левого операнда
	Task* decomposeRightAndCreateLeftOperands(char op, int numberLeft, int operationsRightOperand, int res);
//разложения правого операнда
	Task* decomposeBothOperand(char op, int numberLeft, int operationsLeftOperand, int numberRight, int operationsRightOperand);
//разложения двух операндов
	Task* createLeftandRigth(char op, int numberLeft,int numberRight);
//создание двух операндов

public:
   void draw();//создание и отрисовка графического окна
   void generate();//генерация
};


#endif